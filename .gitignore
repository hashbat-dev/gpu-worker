# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VS Code
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~
.directory

# Coverage reports
tarpaulin-report.html
cobertura.xml
lcov.info
coverage/
*.profraw
*.profdata

# Benchmark results
/target/criterion

# Documentation
/target/doc

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*.log

# Test artifacts
test_output/
*.gif.bak

# Environment files
.env
.env.local
.env.*.local

# Editor directories and files
*.sublime-project
*.sublime-workspace
*.komodoproject
.komodotools
*.tmproj
*.tmproject
.netrwhist

# Debug output
*.dSYM/

# Rust analyzer
/rust-project.json

# Cargo configuration
.cargo/config.toml
.cargo/credentials

# Build artifacts
/build/
/dist/
/out/

# Node modules (if using any JS tooling)
node_modules/

# Python (if using any Python scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
venv/
ENV/

# Docker volumes
.docker/